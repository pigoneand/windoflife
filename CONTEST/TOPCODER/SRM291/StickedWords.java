
public class StickedWords
{
	String[][] f = new String[2600][26];
	public String constructLine(String[] dict, int len)
	{
		int N = dict.length;
		for (int i = 0; i < 2600; ++i)
			for (int j = 0; j < 26; ++j) f[i][j] = "";
		
		for (int i = 0; i < len; ++i)
		{
			for (int j = 0; j < 26; ++j)
			{
				if (i == 0 || f[i][j].length() > 0) 
				{
					for (int k = 0; k < N; ++k)
					{
						if (i > 0 && ('a' + j != dict[k].charAt(0))) continue;
						String ns = f[i][j] + dict[k].substring(1);
						if (i == 0) ns = dict[k];
						if (f[ns.length()][ns.charAt(ns.length() - 1) - 'a'].isEmpty() ||
								ns.compareTo(f[ns.length()][ns.charAt(ns.length() - 1) - 'a']) < 0)
							f[ns.length()][ns.charAt(ns.length() - 1) - 'a'] = ns;
					}
				}
			}
			for (int j = 0; j < 26; ++j) f[i][j] = null;
		}
		
		String ans = "";
		for (int i = len; i < 2600; ++i)  
			for (int j = 0; j < 26; ++j) 
				if (f[i][j].length() > 0) 
				{
					if (ans.isEmpty()) ans = f[i][j]; 
					else 
					{
						if (f[i][j].compareTo(ans) < 0) ans = f[i][j];
					}
				}
		

		return ans;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, int p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		StickedWords obj;
		String answer;
		obj = new StickedWords();
		long startTime = System.currentTimeMillis();
		answer = obj.constructLine(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		String[] p0;
		int p1;
		String p2;

		// ----- test 0 -----
		p0 = new String[]{"salad","sandwich","hamburger","rings"};
		p1 = 35;
		p2 = "hamburgeringsandwichamburgeringsalad";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new String[]{"salad","hamburger","rings"};
		p1 = 35;
		p2 = "";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new String[]{"aba","aac","czz"};
		p1 = 10;
		p2 = "abababaaczz";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new String[]{"aarb","bcb","bbd","dzz"};
		p1 = 15;
		p2 = "aarbcbcbcbcbbdzz";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new String[]{"abd","dgga","abdg","gga","gg","gaader"};
		p1 = 22;
		p2 = "abdggabdggabdggabdgaader";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
