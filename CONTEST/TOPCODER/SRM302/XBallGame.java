import java.util.*;
import java.util.Map.Entry;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class XBallGame
{
	public String[] newStatistics(String[] placeboard)
	{
		Map<String, ArrayList<String> > nameMap = new HashMap<String, ArrayList<String> >();
		for (String s : placeboard)
		{
			String[] args = s.split("-");
			if (nameMap.get(args[0]) == null) nameMap.put(args[0], new ArrayList<String>());
			nameMap.get(args[0]).add(args[1]);
		}
		
		for (Entry<String, ArrayList<String> > entry : nameMap.entrySet()) 
			Collections.sort(entry.getValue());
			
		
		String[] ret = new String[placeboard.length];
		for (int i = 0; i < ret.length; ++i) 
		{
			String[] args = placeboard[i].split("-");
			String name = args[0];
			String heihei = args[1];
			ret[i] = placeboard[i];
			
			ArrayList<String> names = nameMap.get(name);
			for (String s : names) 
				if (!s.equals(heihei)) ret[i] = ret[i] + "," + s;
		}
		
		return ret;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, String[] p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		XBallGame obj;
		String[] answer;
		obj = new XBallGame();
		long startTime = System.currentTimeMillis();
		answer = obj.newStatistics(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.print("\t" + "{");
			for (int i = 0; p1.length > i; ++i) {
				if (i > 0) {
					System.out.print(",");
				}
				System.out.print("\"" + p1[i] + "\"");
			}
			System.out.println("}");
		}
		System.out.println("Your answer:");
		System.out.print("\t" + "{");
		for (int i = 0; answer.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + answer[i] + "\"");
		}
		System.out.println("}");
		if (hasAnswer) {
			if (answer.length != p1.length) {
				res = false;
			} else {
				for (int i = 0; answer.length > i; ++i) {
					if (!answer[i].equals(p1[i])) {
						res = false;
					}
				}
			}
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		String[] p1;
		
		// ----- test 0 -----
		p0 = new String[]{"John-DH","Jack-SP","Sam-OF","John-SP","John-RP"};
		p1 = new String[]{"John-DH,RP,SP","Jack-SP","Sam-OF","John-SP,DH,RP","John-RP,DH,SP"};
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"John-DH","Jack-SP","Sam-OF","John-SP","John-RP","John-RA","John-RZ","Jack-OF","Sam-SP"};
		p1 = new String[]{"John-DH,RA,RP,RZ,SP","Jack-SP,OF","Sam-OF,SP","John-SP,DH,RA,RP,RZ","John-RP,DH,RA,RZ,SP","John-RA,DH,RP,RZ,SP","John-RZ,DH,RA,RP,SP","Jack-OF,SP","Sam-SP,OF"};
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"PFwL-GE","PFwL-EV","agXL-SR","PFwL-CS","PFwL-FE","PFwL-MS","agXL-VS","agXL-AL","PFwL-BI","PFwL-DK","PFwL-MW","PFwL-DS","agXL-XJ","agXL-PJ","agXL-CK","PFwL-KI","agXL-KP","agXL-EL","PFwL-EA"};
		p1 = new String[]{"PFwL-GE,BI,CS,DK,DS,EA,EV,FE,KI,MS,MW","PFwL-EV,BI,CS,DK,DS,EA,FE,GE,KI,MS,MW","agXL-SR,AL,CK,EL,KP,PJ,VS,XJ","PFwL-CS,BI,DK,DS,EA,EV,FE,GE,KI,MS,MW","PFwL-FE,BI,CS,DK,DS,EA,EV,GE,KI,MS,MW","PFwL-MS,BI,CS,DK,DS,EA,EV,FE,GE,KI,MW","agXL-VS,AL,CK,EL,KP,PJ,SR,XJ","agXL-AL,CK,EL,KP,PJ,SR,VS,XJ","PFwL-BI,CS,DK,DS,EA,EV,FE,GE,KI,MS,MW","PFwL-DK,BI,CS,DS,EA,EV,FE,GE,KI,MS,MW","PFwL-MW,BI,CS,DK,DS,EA,EV,FE,GE,KI,MS","PFwL-DS,BI,CS,DK,EA,EV,FE,GE,KI,MS,MW","agXL-XJ,AL,CK,EL,KP,PJ,SR,VS","agXL-PJ,AL,CK,EL,KP,SR,VS,XJ","agXL-CK,AL,EL,KP,PJ,SR,VS,XJ","PFwL-KI,BI,CS,DK,DS,EA,EV,FE,GE,MS,MW","agXL-KP,AL,CK,EL,PJ,SR,VS,XJ","agXL-EL,AL,CK,KP,PJ,SR,VS,XJ","PFwL-EA,BI,CS,DK,DS,EV,FE,GE,KI,MS,MW"};
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"a-AA","a-ZZ"};
		p1 = new String[]{"a-AA,ZZ","a-ZZ,AA"};
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
