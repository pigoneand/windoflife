import java.util.Arrays;

public class Knights {
	
	boolean findPath(int now, int[] leftMatch, int[] rightMatch, boolean[] visit, boolean[][] graph)
	{
		int N = graph.length;
		visit[now] = true;
		
		for (int i = 0; i < N; ++i)
			if (graph[now][i])
				if (rightMatch[i] == -1 || (!visit[rightMatch[i]] && findPath(rightMatch[i], leftMatch, rightMatch, visit, graph)))
				{
					leftMatch[now] = i;
					rightMatch[i] = now;
					return true;
				}
		return false;
	}
	
	int maxMatch(boolean[][] graph)
	{
		int N = graph.length;
		int[] leftMatch = new int[N];
		int[] rightMatch = new int[N];
		Arrays.fill(leftMatch, -1);
		Arrays.fill(rightMatch, -1);
		
		int ans = 0;
		for (int i = 0; i < N; ++i)
			if (leftMatch[i] == -1)
			{
				boolean[] visit = new boolean[N];
				if (findPath(i, leftMatch, rightMatch, visit, graph)) ans++;
			}
		return ans;
	}
	
	public int makeFriendly(int N, String[] pos) {
		String input = "";
		for (String s : pos) input = input + s + " ";
		String[] chesses = input.split(" ");
		
		boolean[][] graph = new boolean[N * N][N * N];
		
		for (int i = 0; i < chesses.length; ++i)
		{
			int x1 = chesses[i].charAt(0) - 'A';
			int y1 = Integer.parseInt(chesses[i].substring(1)) - 1;
			if ((x1 + y1) % 2 == 0) continue;
			for (int j = 0; j < chesses.length; ++j)
			{
				int x2 = chesses[j].charAt(0) - 'A';
				int y2 = Integer.parseInt(chesses[j].substring(1)) - 1;
				int dx = Math.abs(x1 - x2);
				int dy = Math.abs(y1 - y2);
				if (dx == 2 && dy == 1 || dx == 1 && dy == 2)
					graph[x1 * N + y1][x2 * N + y2] = true;
			}
		}
		
		return maxMatch(graph);
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, String[] p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p1[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		Knights obj;
		int answer;
		obj = new Knights();
		long startTime = System.currentTimeMillis();
		answer = obj.makeFriendly(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int p0;
		String[] p1;
		int p2;

		// ----- test 0 -----
		p0 = 5;
		p1 = new String[] { "A2 A4", "B1 B5", "D1 D5 E2 E4 C3" };
		p2 = 1;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = 2;
		p1 = new String[] { "A1 A2 B1 B2" };
		p2 = 0;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = 6;
		p1 = new String[] { "A1 A5 B3 C1 C5 D2 D4 E6 F5" };
		p2 = 3;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = 8;
		p1 = new String[] { "A2 A4 A5 A6 B2 B5 B6 B7 B8", "C3 C8 D1 D2 D3 D4 D5 D6 D8",
				"E1 E3 E8 F1 F2 F8 G3 G5 H4 H7 H8" };
		p2 = 12;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = 9;
		p1 = new String[] { "A3 A4 A5 A7 A8 B6 B8 C3 C6", "C7 C9 D4 D5 D8 D9 E1 E3 E7", "F2 G2 G6 G7 H2 H9 I2 I4 I5",
				"I6 I7 I8 I9" };
		p2 = 10;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
